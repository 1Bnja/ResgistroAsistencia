version: '3.8'

services:
  api-gateway:
    build: ./services/api-gateway
    ports:
      - "80:80"
      - "8404:8404"
    networks:
      - frontend-network
      - backend-network
    depends_on:
      - frontend-1
      - frontend-2

  frontend-1:
    image: nginx:alpine
    networks:
      - frontend-network

  frontend-2:
    image: nginx:alpine
    networks:
      - frontend-network

  api-backend-1:
    image: httpd:alpine
    networks:
      - backend-network

  api-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-backend-dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: ${MONGODB_URI}
      
    networks:
      - dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  ai-service:
    image: httpd:alpine
    networks:
      - backend-network

  websocket-service:
    image: httpd:alpine
    networks:
      - backend-network

networks:
  frontend-network:
  backend-network:
  dev-network:
    driver: bridge