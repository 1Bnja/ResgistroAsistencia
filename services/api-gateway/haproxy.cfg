#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log stdout format raw local0 info
    maxconn 4096
    
    # Tuning de rendimiento
    tune.ssl.default-dh-param 2048
    
    # Stats socket para monitoreo
    stats socket /var/run/haproxy.sock mode 660 level admin
    stats timeout 30s

#---------------------------------------------------------------------
# Common defaults
#---------------------------------------------------------------------
defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    option  http-server-close
    option  forwardfor except 127.0.0.0/8
    option  redispatch
    
    retries 3
    timeout connect 5000ms
    timeout client  50000ms
    timeout server  50000ms
    
    # Páginas de error personalizadas
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

#---------------------------------------------------------------------
# Stats/Monitoring Page
#---------------------------------------------------------------------
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE
    stats show-legends
    stats show-desc Sistema de Control de Asistencia - HAProxy Stats
    # Credenciales de acceso (cambiar en producción)
    stats auth admin:admin123

#---------------------------------------------------------------------
# Frontend - Punto de entrada principal
#---------------------------------------------------------------------
frontend http_front
    bind *:80
    
    # Logging
    log global
    option httplog
    
    # Security headers
    http-response set-header X-Frame-Options SAMEORIGIN
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    
    # ACLs para ruteo
    acl is_api path_beg /api
    acl is_ai path_beg /ai
    acl is_websocket path_beg /ws
    acl is_websocket_upgrade hdr(Upgrade) -i WebSocket
    
    # Health check endpoint
    acl is_health_check path /health
    
    # Ruteo basado en path
    use_backend api_backend if is_api
    use_backend ai_backend if is_ai
    use_backend websocket_backend if is_websocket or is_websocket_upgrade
    use_backend health_backend if is_health_check
    
    # Default: Frontend React
    default_backend frontend_backend

#---------------------------------------------------------------------
# Backend - API Service (Node.js)
# Con múltiples réplicas para Alta Disponibilidad
#---------------------------------------------------------------------
backend api_backend
    balance roundrobin
    option httpchk GET /api/health
    http-check expect status 200
    
    # Strip /api prefix antes de enviar al backend
    http-request set-path %[path,regsub(^/api,)]
    
    # Servidores (réplicas)
    server api-1 api-backend-1:3000 check inter 5s rise 2 fall 3
    server api-2 api-backend-2:3000 check inter 5s rise 2 fall 3

#---------------------------------------------------------------------
# Backend - AI Service (Python)
#---------------------------------------------------------------------
backend ai_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Strip /ai prefix
    http-request set-path %[path,regsub(^/ai,)]
    
    # Timeouts más largos para procesamiento de IA
    timeout server 60000ms
    
    server ai-1 ai-service:5000 check inter 10s rise 2 fall 3

#---------------------------------------------------------------------
# Backend - WebSocket Service (Tiempo Real)
#---------------------------------------------------------------------
backend websocket_backend
    balance roundrobin
    
    # Configuración específica para WebSocket
    option http-server-close
    timeout tunnel 3600s
    timeout client 3600s
    timeout server 3600s
    
    # Strip /ws prefix
    http-request set-path %[path,regsub(^/ws,)]
    
    server ws-1 websocket-service:4000 check inter 5s rise 2 fall 3

#---------------------------------------------------------------------
# Backend - Frontend Service (React/Nginx)
# Con múltiples réplicas para Alta Disponibilidad
#---------------------------------------------------------------------
backend frontend_backend
    balance roundrobin
    option httpchk GET /health.html
    http-check expect status 200
    
    # Servidores (réplicas)
    server frontend-1 frontend-1:80 check inter 5s rise 2 fall 3
    server frontend-2 frontend-2:80 check inter 5s rise 2 fall 3

#---------------------------------------------------------------------
# Backend - Health Check
#---------------------------------------------------------------------
backend health_backend
    mode http
    http-request return status 200 content-type text/plain string "OK"